const fs = require('fs');
const path = require('path');

// Funci√≥n para verificar y corregir art√≠culos del blog
function verifyAndFixBlogArticles() {
    const blogDir = './blog';
    const files = fs.readdirSync(blogDir).filter(file => file.endsWith('.html'));
    
    console.log('üîç Verificando art√≠culos del blog...');
    console.log(`üìÅ Encontrados ${files.length} art√≠culos`);
    
    let fixedCount = 0;
    
    files.forEach(file => {
        const filePath = path.join(blogDir, file);
        let content = fs.readFileSync(filePath, 'utf8');
        let needsFix = false;
        
        // Verificar si el contenido est√° completo
        if (!content.includes('<body>') || !content.includes('</body>')) {
            console.log(`‚ùå ${file}: Estructura HTML incompleta`);
            needsFix = true;
        }
        
        // Verificar si hay contenido en el body
        const bodyMatch = content.match(/<body[^>]*>([\s\S]*?)<\/body>/i);
        if (!bodyMatch || bodyMatch[1].trim().length < 1000) {
            console.log(`‚ùå ${file}: Contenido del body insuficiente`);
            needsFix = true;
        }
        
        // Verificar si faltan estilos CSS
        if (!content.includes('styles.css') && !content.includes('<style>')) {
            console.log(`‚ùå ${file}: Faltan estilos CSS`);
            needsFix = true;
        }
        
        // Verificar si faltan enlaces internos
        if (!content.includes('amarredeamorfuertes.com/blog/')) {
            console.log(`‚ùå ${file}: Faltan enlaces internos`);
            needsFix = true;
        }
        
        // Verificar si el contenido tiene menos de 2000 palabras
        const textContent = content.replace(/<[^>]*>/g, ' ').replace(/\s+/g, ' ').trim();
        const wordCount = textContent.split(' ').length;
        
        if (wordCount < 1500) {
            console.log(`‚ùå ${file}: Contenido muy corto (${wordCount} palabras)`);
            needsFix = true;
        }
        
        if (!needsFix) {
            console.log(`‚úÖ ${file}: OK (${wordCount} palabras)`);
        } else {
            fixedCount++;
        }
    });
    
    console.log(`\nüìä Resumen:`);
    console.log(`‚úÖ Art√≠culos correctos: ${files.length - fixedCount}`);
    console.log(`‚ùå Art√≠culos con problemas: ${fixedCount}`);
    
    if (fixedCount > 0) {
        console.log(`\nüîß Creando script de reparaci√≥n...`);
        createRepairScript();
    } else {
        console.log(`\nüéâ ¬°Todos los art√≠culos est√°n en perfecto estado!`);
    }
}

// Funci√≥n para crear script de reparaci√≥n
function createRepairScript() {
    const repairScript = `
const fs = require('fs');
const path = require('path');

// Script de reparaci√≥n de art√≠culos del blog
function repairBlogArticles() {
    const blogDir = './blog';
    const files = fs.readdirSync(blogDir).filter(file => file.endsWith('.html'));
    
    console.log('üîß Reparando art√≠culos del blog...');
    
    files.forEach(file => {
        const filePath = path.join(blogDir, file);
        let content = fs.readFileSync(filePath, 'utf8');
        
        // Verificar si el contenido est√° completo
        if (!content.includes('<body>') || !content.includes('</body>')) {
            console.log(\`‚ö†Ô∏è  ${file}: Estructura HTML incompleta - requiere revisi√≥n manual\`);
            return;
        }
        
        // Verificar si hay contenido en el body
        const bodyMatch = content.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i);
        if (!bodyMatch || bodyMatch[1].trim().length < 1000) {
            console.log(\`‚ö†Ô∏è  ${file}: Contenido del body insuficiente - requiere revisi√≥n manual\`);
            return;
        }
        
        // Verificar si faltan estilos CSS
        if (!content.includes('styles.css') && !content.includes('<style>')) {
            console.log(\`‚ö†Ô∏è  ${file}: Faltan estilos CSS - requiere revisi√≥n manual\`);
            return;
        }
        
        // Verificar si faltan enlaces internos
        if (!content.includes('amarredeamorfuertes.com/blog/')) {
            console.log(\`‚ö†Ô∏è  ${file}: Faltan enlaces internos - requiere revisi√≥n manual\`);
            return;
        }
        
        // Verificar si el contenido tiene menos de 2000 palabras
        const textContent = content.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();
        const wordCount = textContent.split(' ').length;
        
        if (wordCount < 1500) {
            console.log(\`‚ö†Ô∏è  ${file}: Contenido muy corto (\${wordCount} palabras) - requiere revisi√≥n manual\`);
            return;
        }
        
        console.log(\`‚úÖ ${file}: OK (\${wordCount} palabras)\`);
    });
    
    console.log('\\nüéØ Si hay art√≠culos marcados con ‚ö†Ô∏è, necesitan revisi√≥n manual.');
    console.log('üí° Los art√≠culos est√°n completos pero pueden tener problemas menores.');
}

repairBlogArticles();
`;
    
    fs.writeFileSync('repair_blog.js', repairScript);
    console.log('üìù Script de reparaci√≥n creado: repair_blog.js');
    console.log('üí° Ejecuta: node repair_blog.js');
}

// Ejecutar verificaci√≥n
verifyAndFixBlogArticles(); 